.minion__interaction {
  // border-radius: var(--minion-border-radius);
  cursor: pointer;
  height: 100%;
  outline: none;
  pointer-events: auto;
  position: absolute;
  width: 100%;
  @include position-absolute(0, 0, 0, 0, var(--zIndex-MinionInteractionLayer));

  * {
    pointer-events: none;
  }
}

.minion__shadows {
  animation: fadeIn 1200ms var(--animation-transition-cubic) forwards;
  background: transparent;
  border: 4px solid;
  border-color: transparent;
  border-radius: var(--minion-border-radius);
  height: 100%;
  opacity: 0;
  pointer-events: none;
  position: absolute;
  transition: 600ms var(--animation-transition-cubic);
  transition-property: background, opacity, transform;
  width: 100%;
  will-change: background, opacity, transform;

  &:before,
  &:after {
    border-radius: var(--minion-border-radius);
    content: '';
    cursor: pointer;
    height: 100%;
    opacity: 0;
    outline: none;
    transform: scale(1);
    transition: 600ms var(--animation-transition-cubic);
    transition-property: box-shadow, opacity, transform;
    width: 100%;
    will-change: box-shadow, opacity, transform;
    @include position-absolute(0, 0, 0, 0, -1);
  }

  // prettier-ignore
  @keyframes fadeIn {
    from  { opacity: 0; }
    to    { opacity: 1; }
  }
}

[data-has-bulwark='true'] .minion__shadows {
  $percent: 8%; // 50% - $percent
  border-top-left-radius: $percent;
  border-top-right-radius: $percent;
  border-bottom-left-radius: calc(var(--minion-border-radius) - #{$percent});
  border-bottom-right-radius: calc(var(--minion-border-radius) - #{$percent});

  &:before,
  &:after {
    border-top-left-radius: $percent;
    border-top-right-radius: $percent;
    border-bottom-left-radius: calc(var(--minion-border-radius) - #{$percent});
    border-bottom-right-radius: calc(var(--minion-border-radius) - #{$percent});
  }
}

.minion__shadows.minion__race--location {
  $percent: 35%; // 50% - $percent
  border-bottom-left-radius: calc(var(--minion-border-radius) - #{$percent});
  border-bottom-right-radius: calc(var(--minion-border-radius) - #{$percent});

  &:before,
  &:after {
    border-bottom-left-radius: calc(var(--minion-border-radius) - #{$percent});
    border-bottom-right-radius: calc(var(--minion-border-radius) - #{$percent});
  }
}

.minion__interaction {
  & + .minion__shadows:before {
    opacity: 1;
    transform: scale(1);
  }

  &:hover + .minion__shadows:before {
    transform: scale(0.875);
  }

  &:hover + .minion__shadows:after {
    opacity: 1;
    transform: scale(1);
  }
}

@import 'can-attack';
@import 'can-be-attacked';
@import 'is-attacking';
@import 'will-die';
